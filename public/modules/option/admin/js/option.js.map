{"version":3,"file":"/Modules/Option/Assets/admin/js/option.js","mappings":"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","sources":["webpack://fleetcart/./Modules/Option/Resources/assets/admin/js/BaseOption.js","webpack://fleetcart/./Modules/Option/Resources/assets/admin/js/Option.js","webpack://fleetcart/./Modules/Option/Resources/assets/admin/js/ProductOption.js","webpack://fleetcart/./Modules/Option/Resources/assets/admin/js/main.js"],"sourcesContent":["export default class {\r\n    addOptionsErrors(errors) {\r\n        for (let key in errors) {\r\n            let inputField = this.getInputFieldForErrorKey(key);\r\n\r\n            inputField.closest('.option').addClass('option-has-errors');\r\n\r\n            let parent = inputField.parent();\r\n\r\n            parent.append(`<span class=\"help-block\">${errors[key][0]}</span>`);\r\n        }\r\n    }\r\n\r\n    getRowTemplate(data) {\r\n        let template = _.template($('#option-select-values-template').html());\r\n\r\n        return $(template(data));\r\n    }\r\n\r\n    changeOptionType({ optionId, type, values = [] }) {\r\n        let optionValuesElement = this.getOptionValuesElement(optionId);\r\n        let templateType = this.getTemplateType(type, optionValuesElement);\r\n        let optionValuesData = { optionId, value: { id: '', label: '', price: '', price_type: 'fixed' } };\r\n\r\n        if (this.shouldNotChangeTemplate(templateType, optionValuesElement)) {\r\n            return;\r\n        }\r\n\r\n        if (values.length !== 0 && templateType === 'text') {\r\n            optionValuesData.value = values[0];\r\n        }\r\n\r\n        let template = _.template($(`#option-${templateType}-template`).html());\r\n\r\n        optionValuesElement.html(template(optionValuesData));\r\n\r\n        if (templateType === 'select') {\r\n            this.addOptionRowEventListener(optionId);\r\n\r\n            this.addOptionRows({ optionId, values });\r\n\r\n            if (values.length === 0) {\r\n                this.getAddNewRowButton(optionId).trigger('click');\r\n            }\r\n        }\r\n    }\r\n\r\n    addOptionRows({ optionId, values }) {\r\n        for (let [index, value] of values.entries()) {\r\n            this.addOptionRow({\r\n                optionId,\r\n                valueId: index,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n\r\n    getTemplateType(type) {\r\n        if (this.templateTypeIsText(type)) {\r\n            return 'text';\r\n        }\r\n\r\n        if (this.templateTypeIsSelect(type)) {\r\n            return 'select';\r\n        }\r\n    }\r\n\r\n    templateTypeIsText(type) {\r\n        return ['field', 'textarea', 'date', 'date_time', 'time'].includes(type);\r\n    }\r\n\r\n    templateTypeIsSelect(type) {\r\n        return ['dropdown', 'checkbox', 'checkbox_custom', 'radio', 'radio_custom', 'multiple_select'].includes(type);\r\n    }\r\n\r\n    shouldNotChangeTemplate(templateType, optionValuesElement) {\r\n        return templateType === undefined || this.alreadyHasCurrentTemplate(templateType, optionValuesElement);\r\n    }\r\n\r\n    alreadyHasCurrentTemplate(templateType, optionValuesElement) {\r\n        if (templateType === 'text') {\r\n            return optionValuesElement.children().hasClass('option-text');\r\n        }\r\n\r\n        if (templateType === 'select') {\r\n            return optionValuesElement.children().hasClass('option-select');\r\n        }\r\n    }\r\n\r\n    initOptionRow(template, selectValues) {\r\n        if (selectValues.length !== 0 && ! selectValues.is('.sortable')) {\r\n            this.makeSortable(selectValues[0]);\r\n\r\n            selectValues.addClass('sortable');\r\n        }\r\n\r\n        this.deleteOptionRowEventListener(template);\r\n\r\n        window.admin.tooltip();\r\n    }\r\n\r\n    deleteOptionRowEventListener(row) {\r\n        row.find('.delete-row').on('click', (e) => {\r\n            $(e.currentTarget).closest('.option-row').remove();\r\n        });\r\n    }\r\n\r\n    makeSortable(el) {\r\n        Sortable.create(el, {\r\n            handle: '.drag-icon',\r\n            animation: 150,\r\n        });\r\n    }\r\n}\r\n","import BaseOption from './BaseOption';\r\n\r\nexport default class extends BaseOption {\r\n    constructor() {\r\n        super();\r\n\r\n        let values = FleetCart.data['option.values'];\r\n\r\n        $('#type').on('change', (e) => {\r\n            super.changeOptionType({ type: e.currentTarget.value, values });\r\n            super.addOptionsErrors(FleetCart.errors['option.values']);\r\n        });\r\n\r\n        $('#type').trigger('change');\r\n\r\n        window.admin.removeSubmitButtonOffsetOn('#values');\r\n    }\r\n\r\n    addOptionRow({ valueId, value = { label: '', price: '', price_type: 'fixed' } }) {\r\n        let template = this.getRowTemplate({ optionId: undefined, valueId, value });\r\n\r\n        let selectValues = $('#select-values').append(template);\r\n\r\n        super.initOptionRow(template, selectValues);\r\n    }\r\n\r\n    addOptionRowEventListener() {\r\n        $('#add-new-row').on('click', () => {\r\n            let valueId = $('#option-values .option-row').length;\r\n\r\n            this.addOptionRow({ valueId });\r\n        });\r\n    }\r\n\r\n    getOptionValuesElement() {\r\n        return $('#option-values');\r\n    }\r\n\r\n    getAddNewRowButton() {\r\n        return $('#add-new-row');\r\n    }\r\n\r\n    getInputFieldForErrorKey(key) {\r\n        let keyParts = key.split('.');\r\n\r\n        // Replace all \"_\" to \"-\".\r\n        keyParts = keyParts.map(k => {\r\n            return k.split('_').join('-');\r\n        });\r\n\r\n        return $(`#${keyParts.join('-')}`);\r\n    }\r\n}\r\n","import BaseOption from './BaseOption';\r\n\r\nexport default class extends BaseOption {\r\n    constructor() {\r\n        super();\r\n\r\n        this.optionsCount = 0;\r\n\r\n        this.addOptions(FleetCart.data['product.options']);\r\n\r\n        if (this.optionsCount === 0) {\r\n            this.addOption();\r\n        }\r\n\r\n        if (this.optionsCount > 3) {\r\n            this.collapseOptions();\r\n        }\r\n\r\n        super.addOptionsErrors(FleetCart.errors['product.options']);\r\n\r\n        $('#add-new-option').on('click', () => this.addOption());\r\n        $('#add-global-option').on('click', () => this.addGlobalOption());\r\n    }\r\n\r\n    addOptions(options) {\r\n        for (let option of options) {\r\n            this.addOption(option);\r\n        }\r\n    }\r\n\r\n    collapseOptions() {\r\n        let options = $('.option:not(.option-has-errors)');\r\n\r\n        for (let option of options) {\r\n            $(option).find('[data-toggle=collapse]').trigger('click');\r\n        }\r\n    }\r\n\r\n    addGlobalOption() {\r\n        let globalOptionId = $('#global-option').val();\r\n\r\n        if (globalOptionId === '') {\r\n            return window.admin.stopButtonLoading($('#add-global-option'));\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'GET',\r\n            url: route('admin.options.show', globalOptionId),\r\n            dataType: 'json',\r\n            success: option => {\r\n                this.addOption(option);\r\n\r\n                window.admin.stopButtonLoading($('#add-global-option'));\r\n            },\r\n        });\r\n    }\r\n\r\n    addOption(option = { id: null, name: null, type: null, is_required: false, values: [] }) {\r\n        // Cast \"is_required\" field to boolean.\r\n        option.is_required = !! JSON.parse(option.is_required);\r\n\r\n        let optionId = this.optionsCount;\r\n\r\n        let template = _.template($('#option-template').html());\r\n        let html = $(template({ option, optionId }));\r\n\r\n        if (option.name !== null) {\r\n            setTimeout(() => {\r\n                $(`#option-${optionId}`).find('#option-name').text(option.name);\r\n            });\r\n        }\r\n\r\n        let optionGroup = $('#options-group').append(html);\r\n\r\n        if (! optionGroup.is('.sortable')) {\r\n            super.makeSortable(optionGroup[0]);\r\n\r\n            optionGroup.addClass('sortable');\r\n        }\r\n\r\n        this.deleteOptionEventListener(html);\r\n        this.updateOptionNameEventListener(optionId);\r\n        this.updateTemplateEventListener(optionId, option['values']);\r\n\r\n        window.admin.tooltip();\r\n\r\n        this.optionsCount++;\r\n    }\r\n\r\n    deleteOptionEventListener(option) {\r\n        option.find('.delete-option').on('click', (e) => $(e.currentTarget).closest('.option').remove());\r\n    }\r\n\r\n    updateOptionNameEventListener(optionId) {\r\n        let option = $(`#option-${optionId}`);\r\n        let old = option.find('#option-name').text();\r\n\r\n        $(option).find('.option-name-field').on('input', (e) => {\r\n            let name = e.currentTarget.value !== '' ? e.currentTarget.value : old;\r\n\r\n            option.find('#option-name').text(name);\r\n        });\r\n    }\r\n\r\n    updateTemplateEventListener(optionId, values = []) {\r\n        let optionTypeElement = $(`#option-${optionId}-type`);\r\n\r\n        optionTypeElement.on('change', (e) => {\r\n            let type = e.currentTarget.value;\r\n\r\n            if (type === '') {\r\n                return this.getOptionValuesElement(optionId).html('');\r\n            }\r\n\r\n            super.changeOptionType({ optionId, type, values });\r\n        });\r\n\r\n        // Trigger the \"change\" event on option type after attaching the listener\r\n        // this will automatically take effect of the current option which is\r\n        // maybe loaded from the old input values or from the product data.\r\n        optionTypeElement.trigger('change');\r\n    }\r\n\r\n    addOptionRow({ optionId, valueId, value = { label: '', price: '', price_type: 'fixed' } }) {\r\n        let template = this.getRowTemplate({ optionId, valueId, value });\r\n\r\n        let selectValues = $(`#option-${optionId}-select-values`).append(template);\r\n\r\n        super.initOptionRow(template, selectValues);\r\n    }\r\n\r\n    addOptionRowEventListener(optionId) {\r\n        $(`#option-${optionId}-add-new-row`).on('click', () => {\r\n            let valueId = $(`#option-${optionId}-values .option-row`).length;\r\n\r\n            this.addOptionRow({ optionId, valueId });\r\n        });\r\n    }\r\n\r\n    getOptionValuesElement(optionId) {\r\n        return $(`#option-${optionId}-values`);\r\n    }\r\n\r\n    getAddNewRowButton(optionId) {\r\n        return $(`#option-${optionId}-add-new-row`);\r\n    }\r\n\r\n    getInputFieldForErrorKey(key) {\r\n        let keyParts = key.split('.');\r\n\r\n        // Remove the first element which is \"option\".\r\n        keyParts.shift();\r\n\r\n        // Replace all \"_\" to \"-\".\r\n        keyParts = keyParts.map(k => {\r\n            return k.split('_').join('-');\r\n        });\r\n\r\n        return $(`#option-${keyParts.join('-')}`);\r\n    }\r\n}\r\n","import Option from './Option';\r\nimport ProductOption from './ProductOption';\r\n\r\nif ($('#option-create-form, #option-edit-form').length !== 0) {\r\n    new Option();\r\n}\r\n\r\nif ($('#product-create-form, #product-edit-form').length !== 0) {\r\n    new ProductOption();\r\n}\r\n"],"names":["errors","key","inputField","this","getInputFieldForErrorKey","closest","addClass","parent","append","concat","value","data","template","_","$","html","_ref","optionId","type","_ref$values","values","optionValuesElement","getOptionValuesElement","templateType","getTemplateType","optionValuesData","id","label","price","price_type","shouldNotChangeTemplate","length","addOptionRowEventListener","addOptionRows","getAddNewRowButton","trigger","_ref2","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","_step$value","_slicedToArray","index","addOptionRow","valueId","err","e","f","templateTypeIsText","templateTypeIsSelect","includes","undefined","alreadyHasCurrentTemplate","children","hasClass","selectValues","is","makeSortable","deleteOptionRowEventListener","window","admin","tooltip","row","find","on","currentTarget","remove","el","Sortable","create","handle","animation","_default","_BaseOption","_inherits","_super","_createSuper","_thisSuper","_thisSuper2","_this","_classCallCheck","call","FleetCart","_get","_assertThisInitialized","_getPrototypeOf","prototype","removeSubmitButtonOffsetOn","_ref$value","getRowTemplate","_this2","keyParts","split","map","k","join","BaseOption","optionsCount","addOptions","addOption","collapseOptions","addGlobalOption","options","option","_step2","_iterator2","globalOptionId","val","stopButtonLoading","ajax","url","route","dataType","success","arguments","name","is_required","JSON","parse","setTimeout","text","optionGroup","deleteOptionEventListener","updateOptionNameEventListener","updateTemplateEventListener","old","_this3","optionTypeElement","_this4","shift","Option","ProductOption"],"sourceRoot":""}